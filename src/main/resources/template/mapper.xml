<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${mapperPackage}.${moduleNameCapi}Mapper">
	<resultMap type="${moduleName}Entity" id="${moduleName}Map" autoMapping="true">
	<#list attrList as key> 
		<#if key.isPrimaryKey = "1"> 
			<id column="${key.field}" property="${key.attribute}" />
		<#else> 
			<result column="${key.field}" property="${key.attribute}" />
		</#if>
	</#list>
	</resultMap>
	
	<insert id="save" parameterType="${moduleName}Entity">
		insert into ${tableName} (
	  	<#list attrList as key> 
			${key.field}<#if key_has_next>,</#if>
		</#list>
	    )values (
	    <#list attrList as key> 
	    	${r"#{"}${key.attribute}${r"}"}<#if key_has_next>,</#if>
		</#list>
	    )
	</insert>
	
	<insert id="saveSelective" parameterType="${moduleName}Entity">
		insert into ${tableName} (
	  	<#list attrList as key> 
	  	   <if test="${key.attribute} != null">
			${key.field}<#if key_has_next>,</#if>
		   </if>
		</#list>
	    )values (
	    <#list attrList as key> 
	      <if test="${key.attribute} != null">
	       ${r"#{"}${key.attribute}${r"}"}<#if key_has_next>,</#if>
		   </if>
		</#list>
	    )
	</insert>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		 delete from ${tableName}
         where <#list attrList as key><#if key.isPrimaryKey = "1"> ${key.field} = ${r"#{"}${key.attribute}${r"}"}</#if></#list>
	</delete>
	
	<delete id="deleteByExample" parameterType="${moduleName}Entity">
		 delete from ${tableName} 
	     <if test="condition != null">
	     where ${r"${condition}"}
		 </if>
	</delete>
	
	<update id="updateByPrimaryKey" parameterType="${moduleName}Entity">
		update 	${tableName} set 
		<#list attrList as key> 
			${key.field} = ${r"#{"}${key.attribute}${r"}"}<#if key_has_next>,</#if>
		</#list>
		where <#list attrList as key><#if key.isPrimaryKey = "1"> ${key.field} = ${r"#{"}${key.attribute}${r"}"}</#if></#list>
	</update>
	
	<update id="updateByPrimaryKeySelective" parameterType="${moduleName}Entity">
		update 	${tableName} set 
		<#list attrList as key> 
	  	   <if test="${key.attribute} != null and ${key.attribute} != 'null'">
			${key.field} = ${r"#{"}${key.attribute}${r"}"}<#if key_has_next>,</#if>
		   </if>
		</#list>
		where <#list attrList as key><#if key.isPrimaryKey = "1"> ${key.field} = ${r"#{"}${key.attribute}${r"}"}</#if></#list>
	</update>
	
	<update id="updateByExample" parameterType="${moduleName}Entity">
		update 	${tableName} set 
		<#list attrList as key> 
			${key.field} = ${r"#{"}${key.attribute}${r"}"}<#if key_has_next>,</#if>
		</#list>
		<if test="condition != null">
	     where ${r"${condition}"}
		 </if>
	</update>

	<update id="updateByExampleSelective" parameterType="${moduleName}Entity">
		update 	${tableName} set 
		<#list attrList as key> 
	  	   <if test="${key.attribute} != null and ${key.attribute} != 'null'">
			${key.field} = ${r"#{"}${key.attribute}${r"}"}<#if key_has_next>,</#if>
		   </if>
		</#list>
		<if test="condition != null">
	     where ${r"${condition}"}
		 </if>
	</update>

	<select id="countByExample"  parameterType="${moduleName}Entity" resultType="java.lang.Integer">
	    select count(*) from ${tableName}
		<if test="condition != null">
	     where ${r"${condition}"}
		 </if>
	</select>
	
	<select id="queryByPrimaryKey"  parameterType="${moduleName}Entity" resultType="${moduleName}Entity">
	    select 
		<choose>
            <when test="columnStr != null and columnStr != 'null'"> ${r"${columnStr}"}</when>
            <otherwise> * </otherwise>
         </choose>		
 		from ${tableName}
        where <#list attrList as key><#if key.isPrimaryKey = "1"> where ${key.field} = ${r"#{"}${key.attribute}${r"}"}</#if></#list>
	</select>
	
	<select id="queryByExample"  parameterType="${moduleName}Entity" resultType="${moduleName}Entity">
	    select 
		<choose>
            <when test="columnStr != null and columnStr != 'null'"> ${r"${columnStr}"}</when>
            <otherwise> * </otherwise>
         </choose>	
 		from ${tableName}
		<if test="condition != null">
	     where ${r"${condition}"}
		 </if>
	</select>
</mapper>